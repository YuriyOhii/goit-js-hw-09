{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAvCGQ,SAASC,cAAc,SAC/BC,iBAAiB,UAGzB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,OAAEA,EAAMb,MAAEA,EAAKc,KAAEA,GAASH,EAAEI,OAAOC,SACnCC,EAAQ,CACZC,WAAYlB,EAAMmB,cAClBC,UAAWN,EAAKK,cAChBN,OAAQA,EAAOM,eAEjB,GAAIF,EAAMC,WAAa,GAAKD,EAAMG,UAAY,GAAKH,EAAMJ,QAAU,EAAG,OAAOjB,EAAAyB,OAAOC,QAAQ,2BAI9F,UAA4BJ,WAAEA,EAAUE,UAAEA,EAASP,OAAEA,IACnD,IAAIU,EAAQL,EACZ,IAAK,IAAIM,EAAI,EAAGA,GAAKX,EAAQW,GAAK,EAChC1B,EAAc0B,EAAGD,GACdE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAyB,OAAOK,QAAQ,qBAAqB3B,QAAeC,MAAU,IAE9D2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAyB,OAAOC,QAAQ,oBAAoBvB,QAAeC,MAAU,IAEhEuB,GAASH,C,CAbXQ,CAAmBX,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const { amount, delay, step } = e.target.elements;\n  const value = {\n    firstDelay: delay.valueAsNumber,\n    stepDelay: step.valueAsNumber,\n    amount: amount.valueAsNumber,\n  };\n  if (value.firstDelay < 0 || value.stepDelay < 0 || value.amount <= 0) return Notify.failure(`Put the correct values`);\n  makePluralPromises(value);\n}\n\nfunction makePluralPromises({ firstDelay, stepDelay, amount }) {\n  let delay = firstDelay;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n  \n  return promise;\n\n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","amount","step","target","elements","value","firstDelay","valueAsNumber","stepDelay","Notify","failure","delay1","i","then","success","catch","$47d4ff9957288465$var$makePluralPromises"],"version":3,"file":"03-promises.4651872c.js.map"}